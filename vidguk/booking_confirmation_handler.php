<?php
header('Content-Type: application/json; charset=utf-8');
header('Access-Control-Allow-Origin: *');
header('Access-Control-Allow-Methods: POST');
header('Access-Control-Allow-Headers: Content-Type');

require_once 'config/database.php';

// Email –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
define('SITE_NAME', '–ü—ñ–¥–±—ñ—Ä —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç—ñ–≤');
define('SITE_URL', 'http://localhost:8000'); // –ó–º—ñ–Ω—ñ—Ç—å –Ω–∞ –≤–∞—à –¥–æ–º–µ–Ω
define('ADMIN_EMAIL', 'specialists.finder89@gmail.com');

try {
    if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
        throw new Exception('–ú–µ—Ç–æ–¥ –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è');
    }

    $input = json_decode(file_get_contents('php://input'), true);

    if (!$input) {
        throw new Exception('–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ');
    }

    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è –æ–±–æ–≤'—è–∑–∫–æ–≤–∏—Ö –ø–æ–ª—ñ–≤
    $required_fields = ['specialist_id', 'date', 'time', 'type', 'name', 'email', 'phone'];
    foreach ($required_fields as $field) {
        if (empty($input[$field])) {
            throw new Exception("–ü–æ–ª–µ '$field' –æ–±–æ–≤'—è–∑–∫–æ–≤–µ");
        }
    }

    // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —Ç–∞–±–ª–∏—Ü—ñ
    createTables($pdo);

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å –¥–∞—Ç–∏/—á–∞—Å—É
    $check_sql = "SELECT COUNT(*) as count FROM bookings
                  WHERE specialist_id = :specialist_id
                  AND booking_date = :date
                  AND booking_time = :time
                  AND status IN ('pending', 'confirmed')";

    $stmt = $pdo->prepare($check_sql);
    $stmt->execute([
        'specialist_id' => $input['specialist_id'],
        'date' => $input['date'],
        'time' => $input['time']
    ]);

    $result = $stmt->fetch();

    if ($result['count'] > 0) {
        throw new Exception('–¶–µ–π —á–∞—Å –≤–∂–µ –∑–∞–π–Ω—è—Ç–∏–π. –û–±–µ—Ä—ñ—Ç—å —ñ–Ω—à–∏–π —á–∞—Å.');
    }

    // –ì–µ–Ω–µ—Ä—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —Ç–æ–∫–µ–Ω –¥–ª—è –≤—ñ–¥–≥—É–∫—É
    $review_token = bin2hex(random_bytes(32));

    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è
    $insert_sql = "INSERT INTO bookings (
        specialist_id, client_name, client_email, client_phone,
        service_type, booking_date, booking_time, message, status,
        review_token, created_at
    ) VALUES (
        :specialist_id, :name, :email, :phone,
        :type, :date, :time, :message, 'pending',
        :review_token, NOW()
    )";

    $stmt = $pdo->prepare($insert_sql);
    $booking_result = $stmt->execute([
        'specialist_id' => $input['specialist_id'],
        'name' => $input['name'],
        'email' => $input['email'],
        'phone' => $input['phone'],
        'type' => $input['type'],
        'date' => $input['date'],
        'time' => $input['time'],
        'message' => $input['message'] ?? '',
        'review_token' => $review_token
    ]);

    if (!$booking_result) {
        throw new Exception('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è');
    }

    $booking_id = $pdo->lastInsertId();

    // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–∞
    $specialist_sql = "SELECT name FROM specialists WHERE id = :id";
    $stmt = $pdo->prepare($specialist_sql);
    $stmt->execute(['id' => $input['specialist_id']]);
    $specialist = $stmt->fetch();
    $specialist_name = $specialist['name'] ?? '–û–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –°–∞–≤—á—É–∫';

    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ email –∫–ª—ñ—î–Ω—Ç—É
    $emailSent = sendClientConfirmationEmail([
        'booking_id' => $booking_id,
        'name' => $input['name'],
        'email' => $input['email'],
        'phone' => $input['phone'],
        'type' => $input['type'],
        'date' => $input['date'],
        'time' => $input['time'],
        'message' => $input['message'] ?? '',
        'specialist_name' => $specialist_name,
        'review_token' => $review_token
    ]);

    echo json_encode([
        'success' => true,
        'message' => '–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ!',
        'booking_id' => $booking_id,
        'email_sent' => $emailSent
    ], JSON_UNESCAPED_UNICODE);

} catch (Exception $e) {
    http_response_code(400);
    error_log("–ü–æ–º–∏–ª–∫–∞ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è: " . $e->getMessage());

    echo json_encode([
        'success' => false,
        'error' => $e->getMessage(),
        'message' => $e->getMessage()
    ], JSON_UNESCAPED_UNICODE);
}

// –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å
function createTables($pdo) {
    // –¢–∞–±–ª–∏—Ü—è –±—Ä–æ–Ω—é–≤–∞–Ω—å
    $bookings_sql = "
    CREATE TABLE IF NOT EXISTS bookings (
        id INT AUTO_INCREMENT PRIMARY KEY,
        specialist_id INT NOT NULL,
        client_name VARCHAR(255) NOT NULL,
        client_email VARCHAR(255) NOT NULL,
        client_phone VARCHAR(50) NOT NULL,
        service_type VARCHAR(255) NOT NULL,
        booking_date DATE NOT NULL,
        booking_time TIME NOT NULL,
        message TEXT,
        status ENUM('pending', 'confirmed', 'completed', 'cancelled') DEFAULT 'pending',
        review_token VARCHAR(64),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    )";

    // –¢–∞–±–ª–∏—Ü—è –≤—ñ–¥–≥—É–∫—ñ–≤
    $reviews_sql = "
    CREATE TABLE IF NOT EXISTS reviews (
        id INT AUTO_INCREMENT PRIMARY KEY,
        booking_id INT,
        specialist_id INT NOT NULL,
        client_name VARCHAR(255) NOT NULL,
        client_email VARCHAR(255) NOT NULL,
        rating INT NOT NULL CHECK (rating >= 1 AND rating <= 5),
        review_text TEXT NOT NULL,
        is_approved BOOLEAN DEFAULT 1,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (booking_id) REFERENCES bookings(id) ON DELETE SET NULL
    )";

    $pdo->exec($bookings_sql);
    $pdo->exec($reviews_sql);
}

// –§—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ email –∫–ª—ñ—î–Ω—Ç—É
function sendClientConfirmationEmail($data) {
    $to = $data['email'];
    $subject = "üéâ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è #" . $data['booking_id'] . " - " . SITE_NAME;

    $review_url = SITE_URL . "/leave_review.php?token=" . $data['review_token'];

    $message = "
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset='UTF-8'>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: #007bff; color: white; padding: 20px; text-align: center; border-radius: 10px 10px 0 0; }
            .content { background: #f8f9fa; padding: 30px; border-radius: 0 0 10px 10px; }
            .booking-details { background: white; padding: 20px; border-radius: 10px; margin: 20px 0; border-left: 4px solid #007bff; }
            .btn { display: inline-block; padding: 12px 25px; background: #28a745; color: white; text-decoration: none; border-radius: 5px; margin: 10px 5px; }
            .btn-review { background: #ffc107; color: #212529; }
            .footer { text-align: center; margin-top: 30px; color: #6c757d; font-size: 14px; }
        </style>
    </head>
    <body>
        <div class='container'>
            <div class='header'>
                <h1>üéâ –î—è–∫—É—î–º–æ –∑–∞ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è!</h1>
                <p>–í–∞—à–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–æ –∑–∞–±—Ä–æ–Ω—å–æ–≤–∞–Ω–∞</p>
            </div>

            <div class='content'>
                <h2>–í—ñ—Ç–∞—î–º–æ, {$data['name']}!</h2>
                <p>–ú–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –≤–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è —Ç–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î–º–æ –¥–µ—Ç–∞–ª—ñ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó:</p>

                <div class='booking-details'>
                    <h3>üìã –î–µ—Ç–∞–ª—ñ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è</h3>
                    <p><strong>–ù–æ–º–µ—Ä –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è:</strong> #{$data['booking_id']}</p>
                    <p><strong>–°–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç:</strong> {$data['specialist_name']}</p>
                    <p><strong>–¢–∏–ø –ø–æ—Å–ª—É–≥–∏:</strong> {$data['type']}</p>
                    <p><strong>–î–∞—Ç–∞:</strong> " . date('d.m.Y', strtotime($data['date'])) . "</p>
                    <p><strong>–ß–∞—Å:</strong> {$data['time']}</p>
                    <p><strong>–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω:</strong> {$data['phone']}</p>
                    " . ($data['message'] ? "<p><strong>–î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ–±–∞–∂–∞–Ω–Ω—è:</strong> {$data['message']}</p>" : "") . "
                </div>

                <div style='background: #d4edda; padding: 20px; border-radius: 10px; border-left: 4px solid #28a745;'>
                    <h4>üìû –©–æ –¥–∞–ª—ñ?</h4>
                    <p>‚Ä¢ –ù–∞—à —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π</p>
                    <p>‚Ä¢ –í–∏ –æ—Ç—Ä–∏–º–∞–µ—Ç–µ SMS-–Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∑–∞ –¥–µ–Ω—å –¥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó</p>
                    <p>‚Ä¢ –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –∞–±–æ —Å–∫–∞—Å—É–≤–∞—Ç–∏ –∑—É—Å—Ç—Ä—ñ—á - –∑–≤'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞–º–∏ –∑–∞–∑–¥–∞–ª–µ–≥—ñ–¥—å</p>
                </div>

                <div style='background: #fff3cd; padding: 20px; border-radius: 10px; border-left: 4px solid #ffc107; margin-top: 20px;'>
                    <h4>‚≠ê –ó–∞–ª–∏—à—Ç–µ –≤—ñ–¥–≥—É–∫ –ø—ñ—Å–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó</h4>
                    <p>–ü—ñ—Å–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó –≤–∏ –∑–º–æ–∂–µ—Ç–µ –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è —Å–≤–æ—ó–º–∏ –≤—Ä–∞–∂–µ–Ω–Ω—è–º–∏ —Ç–∞ –¥–æ–ø–æ–º–æ–≥—Ç–∏ —ñ–Ω—à–∏–º –∫–ª—ñ—î–Ω—Ç–∞–º:</p>
                    <a href='{$review_url}' class='btn btn-review'>üìù –ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫</a>
                    <p style='font-size: 12px; margin-top: 10px;'>* –ü–æ—Å–∏–ª–∞–Ω–Ω—è –±—É–¥–µ –∞–∫—Ç–∏–≤–Ω–µ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó</p>
                </div>

                <div class='footer'>
                    <p>–ó –ø–∏—Ç–∞–Ω–Ω—è–º–∏ –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—è:</p>
                    <p>üìß Email: " . ADMIN_EMAIL . "</p>
                    <p>üì± –¢–µ–ª–µ—Ñ–æ–Ω: +380 50 123 45 67</p>
                    <hr>
                    <p>¬© 2024 " . SITE_NAME . ". –î—è–∫—É—î–º–æ –∑–∞ –¥–æ–≤—ñ—Ä—É!</p>
                </div>
            </div>
        </div>
    </body>
    </html>
    ";

    $headers = [
        'MIME-Version: 1.0',
        'Content-type: text/html; charset=UTF-8',
        'From: ' . SITE_NAME . ' <noreply@specialists.com>',
        'Reply-To: ' . ADMIN_EMAIL,
        'X-Mailer: PHP/' . phpversion()
    ];

    return mail($to, $subject, $message, implode("\r\n", $headers));
}
?>